//dfs

class Solution {
    List<Integer> ans=new ArrayList<>();
    public List<Integer> postorder(Node root) {
        if(root==null) return ans;
        for(Node n: root.children){
            postorder(n);
        }
        ans.add(root.val);
        return ans;
    }
}
-----------------------------------------------------------------------------------------------------------------
//dfs with stack

class Solution {
    List<Integer> res=new ArrayList<>();
    public List<Integer> postorder(Node root) {
        if(root==null) return res;
        Stack<Node> sk=new Stack<>();
        sk.add(root);
        while(!sk.empty()){
            root = sk.pop();
            res.add(root.val);
            for(Node node: root.children)
                sk.add(node);  
        }
        Collections.reverse(res);
        return res;
    }
}
